<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Api-rss on MySqlConnector: Async MySQL Driver for .NET and .NET Core</title>
    <link>https://mysql-net.github.io/MySqlConnector/api/index.xml</link>
    <description>Recent content in Api-rss on MySqlConnector: Async MySQL Driver for .NET and .NET Core</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Oct 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mysql-net.github.io/MySqlConnector/api/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MySqlConnection</title>
      <link>https://mysql-net.github.io/MySqlConnector/api/mysql-connection/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mysql-net.github.io/MySqlConnector/api/mysql-connection/</guid>
      <description>

&lt;h1 id=&#34;mysqlconnection&#34;&gt;MySqlConnection&lt;/h1&gt;

&lt;p&gt;MySqlConnection implements the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/api/system.data.common.dbconnection&#34;&gt;ADO.NET DbConnection class&lt;/a&gt;,
please refer to its documentation.&lt;/p&gt;

&lt;p&gt;Additionally, MySqlConnection provides the following public properties and methods that may be used:&lt;/p&gt;

&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public MySqlConnection()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameterless constructor&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public MySqlConnection(string connectionString)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Constructor that set the connection string&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;additional-properties&#34;&gt;Additional Properties&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public int ServerThread&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Connection ID from MySQL Server&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;additional-instance-methods&#34;&gt;Additional Instance Methods&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public Task&amp;lt;MySqlTransaction&amp;gt; BeginTransactionAsync(CancellationToken cancellationToken = default(CancellationToken))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of BeginTransaction&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public Task&amp;lt;MySqlTransaction&amp;gt; BeginTransactionAsync(IsolationLevel isolationLevel, CancellationToken cancellationToken = default(CancellationToken))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of BeginTransaction that supports setting Isolation Level&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;additional-static-methods&#34;&gt;Additional Static Methods&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public static void ClearPool(MySqlConnection connection)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Clears the connection pool that the connection belongs to&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public static Task ClearPoolAsync(MySqlConnection connection)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of ClearPool&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public static Task ClearPoolAsync(MySqlConnection connection, CancellationToken cancellationToken)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of ClearPool with cancellation token support&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public static void ClearAllPools()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Clears all connection pools in the entire application&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public static Task ClearAllPoolsAsync()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of ClearAllPoolsAsync&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public static Task ClearAllPoolsAsync(CancellationToken cancellationToken)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of ClearAllPoolsAsync with cancellation token support&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>MySqlCommand</title>
      <link>https://mysql-net.github.io/MySqlConnector/api/mysql-command/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mysql-net.github.io/MySqlConnector/api/mysql-command/</guid>
      <description>

&lt;h1 id=&#34;mysqlcommand&#34;&gt;MySqlCommand&lt;/h1&gt;

&lt;p&gt;MySqlCommand implements the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/api/system.data.common.dbcommand&#34;&gt;ADO.NET DbCommand class&lt;/a&gt;,
please refer to its documentation.&lt;/p&gt;

&lt;p&gt;Additionally, MySqlCommand provides the following public properties and methods that may be used:&lt;/p&gt;

&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public MySqlCommand()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Parameterless constructor&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public MySqlCommand(string commandText)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;constructor accepting command SQL&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public MySqlCommand(MySqlConnection connection, MySqlTransaction transaction)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;constructor accepting connection object and transaction object&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public MySqlCommand(string commandText, MySqlConnection connection)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;constructor accepting command SQL and connection object&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public MySqlCommand(string commandText, MySqlConnection connection, MySqlTransaction transaction)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;constructor accepting command SQL, connection object, and transaction object&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;additional-properties&#34;&gt;Additional Properties&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public long LastInsertedId&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Holds the value of the LastInsertedId after an SQL command inserting a row has been executed&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>MySqlDataReader</title>
      <link>https://mysql-net.github.io/MySqlConnector/api/mysql-data-reader/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mysql-net.github.io/MySqlConnector/api/mysql-data-reader/</guid>
      <description>

&lt;h1 id=&#34;mysqldatareader&#34;&gt;MySqlDataReader&lt;/h1&gt;

&lt;p&gt;MySqlDataReader implements the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/api/system.data.common.dbdatareader&#34;&gt;ADO.NET DbDataReader class&lt;/a&gt;,
please refer to its documentation.&lt;/p&gt;

&lt;p&gt;Additionally, MySqlDataReader provides the following public properties and methods that may be used:&lt;/p&gt;

&lt;h3 id=&#34;additional-instance-methods&#34;&gt;Additional Instance Methods&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public sbyte GetSByte(int ordinal)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Gets the value of the specified column as an sbyte&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>MySqlTransaction</title>
      <link>https://mysql-net.github.io/MySqlConnector/api/mysql-transaction/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mysql-net.github.io/MySqlConnector/api/mysql-transaction/</guid>
      <description>

&lt;h1 id=&#34;mysqltransaction&#34;&gt;MySqlTransaction&lt;/h1&gt;

&lt;p&gt;MySqlTransaction implements the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/core/api/system.data.common.dbtransaction&#34;&gt;ADO.NET DbTransaction class&lt;/a&gt;,
please refer to its documentation.&lt;/p&gt;

&lt;p&gt;Additionally, MySqlTransaction provides the following public properties and methods that may be used:&lt;/p&gt;

&lt;h3 id=&#34;additional-instance-methods&#34;&gt;Additional Instance Methods&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;public Task CommitAsync(CancellationToken cancellationToken = default(CancellationToken))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of Commit&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;public Task RollbackAsync(CancellationToken cancellationToken = default(CancellationToken))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Async version of Rollback&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
  </channel>
</rss>